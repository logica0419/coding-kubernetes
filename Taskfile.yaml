version: 3

# Task definition order
#
# 1.
#   desc
#
# 2.
#   internal
#   dir
#   silent
#
# 3.
#   vars
#   status / sources / generates / methods / preconditions
#   deps
#
# 4.
#   cmds

tasks:
  check-binary:
    desc: Check if the binary exists
    internal: true
    silent: true
    cmds:
      - |
        if ! (type {{.BINARY}} >/dev/null 2>&1); then
          echo "Install \"{{if .ALT_NAME}}{{.ALT_NAME}}{{else}}{{.BINARY}}{{end}}\" and rerun this task."
          echo {{.INSTALL_DOC}}
          exit 1
        fi

  init:
    desc: Initialize the workspace
    deps:
      - task: check-binary
        vars:
          BINARY: bun
          INSTALL_DOC: https://bun.sh/docs/installation
      - task: check-binary
        vars:
          BINARY: go
          INSTALL_DOC: https://go.dev/doc/install
    cmds:
      - cp .vscode/settings-sample.json .vscode/settings.json
      - bun install

  lint:
    desc: Lint Go code
    deps:
      - task: check-binary
        vars:
          BINARY: golangci-lint
          INSTALL_DOC: https://golangci-lint.run/welcome/install/
    cmds:
      - golangci-lint run

  format:
    desc: Format Go code
    deps:
      - task: check-binary
        vars:
          BINARY: go
          INSTALL_DOC: https://go.dev/doc/install
      - task: check-binary
        vars:
          BINARY: golangci-lint
          INSTALL_DOC: https://golangci-lint.run/welcome/install/
    cmds:
      - go mod tidy
      - golangci-lint fmt

  generate:
    desc: Generate diffs & README.md
    deps:
      - task: check-binary
        vars:
          BINARY: go
          INSTALL_DOC: https://go.dev/doc/install
    cmds:
      - go run tool/*.go

  build-go:
    desc: Build Go code
    deps:
      - task: check-binary
        vars:
          BINARY: go
          INSTALL_DOC: https://go.dev/doc/install
    cmds:
      - |
        for dir in $(find . \( -wholename "*/docs/en/*" -o -wholename "*/tool/*" \) -name main.go | rev | cut -f2- -d'/' | rev); do
          echo "Building $dir"
          CGO_ENABLED=0 go build -o main "$dir"/*.go
        done
      - rm main

  build:
    desc: Build static assets of the documentation
    deps:
      - task: check-binary
        vars:
          BINARY: bun
          INSTALL_DOC: https://bun.sh/docs/installation
      - task: generate
    cmds:
      - bun run build

  dev:
    desc: Start the development server
    deps:
      - task: check-binary
        vars:
          BINARY: bun
          INSTALL_DOC: https://bun.sh/docs/installation
      - task: generate
    cmds:
      - bun run dev
